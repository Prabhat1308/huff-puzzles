 
/** 
 *  DISTRIBUTE HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `distribute(address[])` to
 *  distribute the value sent with the call to each address in the address array as evenly.
 *  Revert if array length is 0
 *  Assume that array length would always be less than or equal to msg.value
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function distribute(address[]) payable returns()


 #define macro MAIN() = takes(0) returns(0) {
   
   0x00 calldataload
   0xE0 shr
   __FUNC_SIG(distribute) eq distribute jumpi
   revert

   distribute:

    0x24 calldataload 
    dup1 iszero empty jumpi  
    dup1 callvalue div 0x40 mstore 
    0x00 mstore              
    0x44 0x20 mstore         

    begin: 0x00 mload iszero done jumpi 
           0x01 0x00 mload sub 0x00 mstore 
           0x00 dup1 dup1 dup1 0x40 mload 0x20 mload calldataload gas call pop
           0x20 mload 0x20 add 0x20 mstore 
           begin jump


  done:
  0x20 0x00 return

  empty:
  0x20 0x00 revert

 }